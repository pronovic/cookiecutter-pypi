[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.0.0" # published version is managed using Git tags (see below)
description = "{{ cookiecutter.short_description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
license = "Apache-2.0"
readme = "PyPI.md"
homepage = "https://pypi.org/project/{{ cookiecutter.project_slug }}/"
repository = "https://github.com/{{ cookiecutter.github_owner }}/{{ cookiecutter.github_repo }}"
include = [
   { path = 'Changelog', format = 'sdist' },
   { path = 'NOTICE', format = 'sdist' },
   { path = 'LICENSE', format = 'sdist' },
   { path = 'README.md', format = 'sdist' },
   { path = 'docs', format = 'sdist' },
   { path = 'tests', format = 'sdist' },
]
packages = [ 
   { include = "{{ cookiecutter.package }}", from = "src" },
]
classifiers=[
   "Programming Language :: Python :: 3",
   "License :: OSI Approved :: Apache Software License",
   "Development Status :: 4 - Beta",
]

# Published version is managed using Git tags
# We get either the tag (like "0.24.1") or a snapshot-type version (like "0.24.1+3.e8319c4")
# If the plugin is not installed, then the version is always "0.0.0", taken from above
[tool.poetry-dynamic-versioning]
enable = true
pattern = '^[vV](?P<base>\d+\.\d+\.\d+)'  # this extracts the version from our vX.Y.Z tag format
format-jinja = {% raw %}"{% if distance == 0 and not dirty %}{{ base }}{% else %}{{ base }}+{{ distance }}.{{ commit }}{% endif %}"{% endraw %}

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"
importlib-metadata = { version="^8.5.0", optional=true }
sphinx = { version="^8.1.3", optional=true }
sphinx-autoapi = { version="^3.0.0", optional=true }

[tool.poetry.extras]
docs = [ "importlib-metadata", "sphinx", "sphinx-autoapi" ]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-testdox = "^3.1.0"
coverage = "^7.4.4"
pylint = "^3.0.1"
pre-commit = "^4.0.1"
black = "^24.2.0"
mypy = "^1.6.0"
isort = "^5.12.0"
colorama = "~0, >=0.4.6"

[tool.black]
line-length = 132
target-version = [{{ cookiecutter.black_target }}]
include = '(src\/scripts\/.*$|\.pyi?$)'
exclude = '''
/(
    \.git
  | __pycache__
  | \.tox
  | \.venv
  | \.poetry
  | build
  | dist
  | docs
  | notes
)/
'''

[tool.isort]
profile = "black"
line_length = 132
skip_glob = [ "docs", "notes" ]

[build-system]
requires = ["poetry>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
